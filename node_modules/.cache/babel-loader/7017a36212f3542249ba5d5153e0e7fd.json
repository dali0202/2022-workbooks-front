{"ast":null,"code":"import { atom, selector } from \"recoil\";\nimport { requestGetCurrentUser } from \"../api\";\nexport const userState = atom({\n  key: \"userState\",\n  default: {\n    currentUser: undefined,\n    authenticated: false\n  }\n});\nexport const getCurrentUserSelector = selector({\n  key: \"user/me\",\n  get: async () => {\n    const response = await requestGetCurrentUser();\n    return response.data;\n  },\n  set: (_ref, newValue) => {\n    let {\n      set\n    } = _ref;\n    set(userState.currentUser, newValue);\n    set(userState.authenticated, true);\n  }\n});","map":{"version":3,"names":["atom","selector","requestGetCurrentUser","userState","key","default","currentUser","undefined","authenticated","getCurrentUserSelector","get","response","data","set","newValue"],"sources":["/Users/keunhyung/IdeaProjects/workbooksfrontdev/front/src/recoil/index.js"],"sourcesContent":["import { atom, selector } from \"recoil\";\nimport { requestGetCurrentUser } from \"../api\";\n\nexport const userState = atom({\n  key: \"userState\",\n  default: {\n    currentUser: undefined,\n    authenticated: false,\n  },\n});\n\nexport const getCurrentUserSelector = selector({\n  key: \"user/me\",\n  get: async () => {\n    const response = await requestGetCurrentUser();\n    return response.data;\n  },\n  set: ({ set }, newValue) => {\n    set(userState.currentUser, newValue);\n    set(userState.authenticated, true);\n  },\n});\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,qBAAT,QAAsC,QAAtC;AAEA,OAAO,MAAMC,SAAS,GAAGH,IAAI,CAAC;EAC5BI,GAAG,EAAE,WADuB;EAE5BC,OAAO,EAAE;IACPC,WAAW,EAAEC,SADN;IAEPC,aAAa,EAAE;EAFR;AAFmB,CAAD,CAAtB;AAQP,OAAO,MAAMC,sBAAsB,GAAGR,QAAQ,CAAC;EAC7CG,GAAG,EAAE,SADwC;EAE7CM,GAAG,EAAE,YAAY;IACf,MAAMC,QAAQ,GAAG,MAAMT,qBAAqB,EAA5C;IACA,OAAOS,QAAQ,CAACC,IAAhB;EACD,CAL4C;EAM7CC,GAAG,EAAE,OAAUC,QAAV,KAAuB;IAAA,IAAtB;MAAED;IAAF,CAAsB;IAC1BA,GAAG,CAACV,SAAS,CAACG,WAAX,EAAwBQ,QAAxB,CAAH;IACAD,GAAG,CAACV,SAAS,CAACK,aAAX,EAA0B,IAA1B,CAAH;EACD;AAT4C,CAAD,CAAvC"},"metadata":{},"sourceType":"module"}